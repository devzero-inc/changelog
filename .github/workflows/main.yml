name: Change Log CI

on:
  push:
    branches: [ main ]
    paths:
      - '**'
  pull_request:
    branches: [ main ]
    paths:
      - '**'

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Bun
      run: |
        curl -fsSL https://bun.sh/install | bash
        echo "$HOME/.bun/bin" >> $GITHUB_PATH
        $HOME/.bun/bin/bun --version

    # Adding Node.js setup for linting since Bun doesn't support any linter
    # and doesn't provide a built-in linter.
    - name: Set up Node.js for linting
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Install backend dependencies
      run: |
        cd backend
        bun install

    - name: Lint backend code
      run: |
        cd backend
        bun run lint

    - name: Run backend tests
      run: |
        cd backend
        bun test

  frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Bun
      run: |
        curl -fsSL https://bun.sh/install | bash
        echo "$HOME/.bun/bin" >> $GITHUB_PATH
        $HOME/.bun/bin/bun --version

    # Adding Node.js setup for linting since Bun doesn't support any linter
    # and doesn't provide a built-in linter.
    - name: Set up Node.js for linting
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Install frontend dependencies
      run: |
        cd frontend
        bun install

    - name: Lint frontend code
      run: |
        cd frontend
        bun run lint

    - name: Run frontend tests
      run: |
        cd frontend
        bun test

  check-docker-compose:
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    steps:
      - uses: actions/checkout@v2

      - name: Make Docker Compose script executable
        run: chmod +x ./docker-compose-up.sh

      - name: Run Docker Compose script
        run: ./docker-compose-up.sh
      
